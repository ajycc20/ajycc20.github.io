<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ajycc20.github.io/"/>
  <updated>2019-02-26T14:20:11.116Z</updated>
  <id>https://ajycc20.github.io/</id>
  
  <author>
    <name>ajycc20</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>菜鸡的Leecode学习(day01)</title>
    <link href="https://ajycc20.github.io/2019/02/26/%E8%8F%9C%E9%B8%A1%E7%9A%84Leecode%E5%AD%A6%E4%B9%A0(day01)/"/>
    <id>https://ajycc20.github.io/2019/02/26/菜鸡的Leecode学习(day01)/</id>
    <published>2019-02-26T12:25:55.000Z</published>
    <updated>2019-02-26T14:20:11.116Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在最先"><a href="#写在最先" class="headerlink" title="写在最先"></a>写在最先</h3><blockquote><p>之前博客用的个人域名然后放在vultr上，前阵子不知道怎么出问题了，访问特别困难，后来发现dnspod解析也需要备案，思来想去干脆直接在github上写了，以前那点文章也懒得恢复了！</p></blockquote><blockquote><p>最近开始在Leecode上刷题，先从简单的开始，嘿嘿！<br>刚好在博客上也做一番记录，算是让自己记忆更深吧。</p></blockquote><hr><h4 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h4><p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><p><strong>示例：</strong></p><pre><code>给定 nums = [2, 7, 11, 15], target = 9因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1]</code></pre><table><thead><tr><th style="text-align:center">提交时间</th><th style="text-align:center">状态</th><th style="text-align:center">执行用时</th><th style="text-align:center">内存消耗</th><th style="text-align:center">语言</th></tr></thead><tbody><tr><td style="text-align:center">14 天前</td><td style="text-align:center">通过</td><td style="text-align:center">52 ms</td><td style="text-align:center">8.1 MB</td><td style="text-align:center">python3</td></tr><tr><td style="text-align:center">14 天前</td><td style="text-align:center">通过</td><td style="text-align:center">7976 ms</td><td style="text-align:center">7.3 MB</td><td style="text-align:center">python3</td></tr></tbody></table><p>第一次提交的堪堪没有超时，因为是直接双for循环暴力解决的。。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> len(nums) &lt; <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, len(nums)):</span><br><span class="line">                <span class="keyword">if</span> nums[i] + nums[j] == target:</span><br><span class="line">                    <span class="keyword">return</span>[i, j]</span><br></pre></td></tr></table></figure></p><p>后来仔细想了想用了dict解决，效率还好。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        dict = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            temp = target - nums[i]</span><br><span class="line">            <span class="keyword">if</span> nums[i] <span class="keyword">in</span> dict:</span><br><span class="line">                <span class="keyword">return</span> [dict[nums[i]], i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dict[temp] = i</span><br></pre></td></tr></table></figure></p><hr><h4 id="整数反转"><a href="#整数反转" class="headerlink" title="整数反转"></a>整数反转</h4><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。<br><strong>示例1：</strong></p><pre><code>输入: 123输出: 321</code></pre><p><strong>示例2：</strong></p><pre><code>输入: -123输出: -321</code></pre><p><strong>示例3：</strong></p><pre><code>输入: 120输出: 21</code></pre><p><strong>注意：</strong><br>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31^,  2^31^ − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><table><thead><tr><th style="text-align:center">提交时间</th><th style="text-align:center">状态</th><th style="text-align:center">执行用时</th><th style="text-align:center">内存消耗</th><th style="text-align:center">语言</th></tr></thead><tbody><tr><td style="text-align:center">8 小时前</td><td style="text-align:center">通过</td><td style="text-align:center">140 ms</td><td style="text-align:center">13.3 MB</td><td style="text-align:center">python3</td></tr><tr><td style="text-align:center">8 小时前</td><td style="text-align:center">解答错误</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">python3</td></tr><tr><td style="text-align:center">8 小时前</td><td style="text-align:center">执行出错</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">python3</td></tr></tbody></table><p>不得不说还是太粗心大意，一开始都没看到示例2，3，就直接提交，直接执行出错了。</p><p>第一次的代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x: int)</span> -&gt; int:</span></span><br><span class="line">        x = str(x)</span><br><span class="line">        y = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> x:</span><br><span class="line">            y = i + y</span><br><span class="line">        y = int(y)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">-2</span>**<span class="number">31</span>&lt;y&lt;<span class="number">2</span>**<span class="number">31</span><span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> y</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:center">提交记录</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">执行出错信息：</td><td style="text-align:center">Line 7: ValueError: invalid literal for int() with base 10: ‘321-‘</td></tr><tr><td style="text-align:center">最后执行的输入：</td><td style="text-align:center">-123</td></tr></tbody></table><p>第二次的代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x: int)</span> -&gt; int:</span></span><br><span class="line">        x1 = str(x)</span><br><span class="line">        y = <span class="string">''</span></span><br><span class="line">        x = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> x1[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            x += <span class="string">'-'</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> x1:</span><br><span class="line">            y = i + y</span><br><span class="line">        y = y.rstrip(<span class="string">'-'</span>)</span><br><span class="line">        y = x + y</span><br><span class="line">        y = int(y)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">-2</span>**<span class="number">31</span>&lt;y&lt;<span class="number">2</span>**<span class="number">31</span><span class="number">-1</span>:</span><br><span class="line">            print(y)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:center">提交记录</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">输入：</td><td style="text-align:center">123</td></tr><tr><td style="text-align:center">输出：</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">预期：</td><td style="text-align:center">321</td></tr></tbody></table><p>最终提交如下，<code>strip</code>方法真的是这次用了才熟悉了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x: int)</span> -&gt; int:</span></span><br><span class="line">        x1 = str(x)</span><br><span class="line">        y = <span class="string">''</span></span><br><span class="line">        x = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> x1[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            x += <span class="string">'-'</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> x1:</span><br><span class="line">            y = i + y</span><br><span class="line">        y = y.rstrip(<span class="string">'-'</span>)</span><br><span class="line">        y = x + y</span><br><span class="line">        y = int(y)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">-2</span>**<span class="number">31</span>&lt;y&lt;<span class="number">2</span>**<span class="number">31</span><span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> y</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><hr><h4 id="回文数"><a href="#回文数" class="headerlink" title="回文数"></a>回文数</h4><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p><strong>示例 1:</strong></p><pre><code>输入: 121输出: true</code></pre><p><strong>示例 2:</strong></p><pre><code>输入: -121输出: false解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</code></pre><p><strong>示例 3:</strong></p><pre><code>输入: 10输出: false解释: 从右向左读, 为 01 。因此它不是一个回文数。</code></pre><p><strong>进阶:</strong></p><p>你能不将整数转为字符串来解决这个问题吗？</p><blockquote><p>好吧，我想说不能23333，真的是菜鸡本菜了</p></blockquote><table><thead><tr><th style="text-align:center">提交时间</th><th style="text-align:center">状态</th><th style="text-align:center">执行用时</th><th style="text-align:center">内存消耗</th><th style="text-align:center">语言</th></tr></thead><tbody><tr><td style="text-align:center">8 小时前</td><td style="text-align:center">通过</td><td style="text-align:center">276 ms</td><td style="text-align:center">13.5 MB</td><td style="text-align:center">python3</td></tr><tr><td style="text-align:center">8 小时前</td><td style="text-align:center">解答错误</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">python3</td></tr></tbody></table><p>第一次提交代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x: int)</span> -&gt; bool:</span></span><br><span class="line">        str_x = str(x)</span><br><span class="line">        y = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> str_x[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str_x:</span><br><span class="line">            y = i + y</span><br><span class="line">        y = int(y)</span><br><span class="line">        <span class="keyword">if</span> x == y:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:center">提交记录</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">输入：</td><td style="text-align:center">10</td></tr></tbody></table><p>输出：|null|<br>|预期：|false|</p><p>最终结果如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x: int)</span> -&gt; bool:</span></span><br><span class="line">        str_x = str(x)</span><br><span class="line">        y = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> str_x[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str_x:</span><br><span class="line">            y = i + y</span><br><span class="line">        y = int(y)</span><br><span class="line">        <span class="keyword">if</span> x == y:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><hr><h4 id="罗马数字转整数"><a href="#罗马数字转整数" class="headerlink" title="罗马数字转整数"></a>罗马数字转整数</h4><p>罗马数字包含以下七种字符: <code>I</code>， <code>V</code>， <code>X</code>， <code>L</code>，<code>C</code>，<code>D</code> 和 <code>M</code>。</p><pre><code>字符          数值I             1V             5X             10L             50C             100D             500M             1000</code></pre><p>例如， 罗马数字 2 写做 <code>II</code> ，即为两个并列的 1。12 写做 <code>XII</code> ，即为 <code>X</code> + <code>II</code> 。 27 写做  <code>XXVII</code>, 即为 <code>XX</code> + <code>V</code> + <code>II</code> 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 <code>IIII</code>，而是 <code>IV</code>。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 <code>IX</code>。这个特殊的规则只适用于以下六种情况：</p><p><code>I</code> 可以放在 <code>V</code> (5) 和 <code>X</code> (10) 的左边，来表示 4 和 9。<br><code>X</code> 可以放在 <code>L</code> (50) 和 <code>C</code> (100) 的左边，来表示 40 和 90。<br><code>C</code> 可以放在 <code>D</code> (500) 和 <code>M</code> (1000) 的左边，来表示 400 和 900。<br>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><p><strong>示例 1:</strong></p><pre><code>输入: &quot;III&quot;输出: 3</code></pre><p><strong>示例 2:</strong></p><pre><code>输入: &quot;IV&quot;输出: 4</code></pre><p><strong>示例 3:</strong></p><pre><code>输入: &quot;IX&quot;输出: 9</code></pre><p><strong>示例 4:</strong></p><pre><code>输入: &quot;LVIII&quot;输出: 58解释: L = 50, V= 5, III = 3.</code></pre><p><strong>示例 5:</strong></p><pre><code>输入: &quot;MCMXCIV&quot;输出: 1994解释: M = 1000, CM = 900, XC = 90, IV = 4.</code></pre><blockquote><p>这题我一开始真的是， 我枯了emmm，思来想去最后用了n个if解决了。。。。。。</p></blockquote><table><thead><tr><th style="text-align:center">提交时间</th><th style="text-align:center">状态</th><th style="text-align:center">执行用时</th><th style="text-align:center">内存消耗</th><th style="text-align:center">语言</th></tr></thead><tbody><tr><td style="text-align:center">7 小时前</td><td style="text-align:center">通过</td><td style="text-align:center">248 ms</td><td style="text-align:center">13.4 MB</td><td style="text-align:center">python3</td></tr><tr><td style="text-align:center">7 小时前</td><td style="text-align:center">解答错误</td><td style="text-align:center">N/A</td><td style="text-align:center">N/A</td><td style="text-align:center">python3</td></tr></tbody></table><p>本来以为第一次提交就直接ok，没想到出错了。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        dict = &#123;<span class="string">'I'</span>: <span class="number">1</span>,<span class="string">'V'</span>: <span class="number">5</span>,<span class="string">'X'</span>: <span class="number">10</span>, <span class="string">'L'</span>: <span class="number">50</span>,<span class="string">'C'</span>: <span class="number">100</span>,<span class="string">'D'</span>: <span class="number">500</span>,<span class="string">'M'</span>: <span class="number">1000</span>&#125;</span><br><span class="line">        sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> dict[s]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'I'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'V'</span> <span class="keyword">or</span> s[i] == <span class="string">'X'</span>:</span><br><span class="line">                    sum -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'V'</span>:</span><br><span class="line">                sum += <span class="number">5</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'X'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'L'</span> <span class="keyword">or</span> s[i] == <span class="string">'C'</span>:</span><br><span class="line">                    sum -= <span class="number">10</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">10</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'L'</span>:</span><br><span class="line">                sum += <span class="number">50</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'C'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'D'</span> <span class="keyword">or</span> s[i] == <span class="string">'M'</span>:</span><br><span class="line">                    sum -= <span class="number">100</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">100</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'D'</span>:</span><br><span class="line">                sum += <span class="number">500</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'M'</span>:</span><br><span class="line">                sum += <span class="number">1000</span></span><br><span class="line">        <span class="keyword">return</span> sum</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:center">提交记录</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">输入：</td><td style="text-align:center">“MMMCDXC”</td></tr><tr><td style="text-align:center">输出：</td><td style="text-align:center">3290</td></tr><tr><td style="text-align:center">预期：</td><td style="text-align:center">3490</td></tr></tbody></table><blockquote><p>放debug里面跑了一遍才发现是Python for循环的问题。如下改用while循环后正常了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        dict = &#123;<span class="string">'I'</span>: <span class="number">1</span>,<span class="string">'V'</span>: <span class="number">5</span>,<span class="string">'X'</span>: <span class="number">10</span>, <span class="string">'L'</span>: <span class="number">50</span>,<span class="string">'C'</span>: <span class="number">100</span>,<span class="string">'D'</span>: <span class="number">500</span>,<span class="string">'M'</span>: <span class="number">1000</span>&#125;</span><br><span class="line">        sum = <span class="number">0</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> dict[s]</span><br><span class="line">        s = s + <span class="string">' '</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(s):</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'I'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'V'</span> <span class="keyword">or</span> s[i] == <span class="string">'X'</span>:</span><br><span class="line">                    sum -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'V'</span>:</span><br><span class="line">                sum += <span class="number">5</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'X'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'L'</span> <span class="keyword">or</span> s[i] == <span class="string">'C'</span>:</span><br><span class="line">                    sum -= <span class="number">10</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">10</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'L'</span>:</span><br><span class="line">                sum += <span class="number">50</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'C'</span>:</span><br><span class="line">                <span class="keyword">if</span> s[i] == <span class="string">'D'</span> <span class="keyword">or</span> s[i] == <span class="string">'M'</span>:</span><br><span class="line">                    sum -= <span class="number">100</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sum += <span class="number">100</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'D'</span>:</span><br><span class="line">                sum += <span class="number">500</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>] == <span class="string">'M'</span>:</span><br><span class="line">                sum += <span class="number">1000</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> sum</span><br></pre></td></tr></table></figure></p></blockquote><hr><h4 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h4><p>编写一个函数来查找字符串数组中的最长公共前缀。<br>如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。<br><strong>示例 1:</strong></p><pre><code>输入: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]输出: &quot;fl&quot;</code></pre><p><strong>示例 2:</strong></p><pre><code>输入: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]输出: &quot;&quot;解释: 输入不存在公共前缀。</code></pre><p><strong>说明:</strong></p><p>所有输入只包含小写字母 <code>a-z</code> 。<br>|提交时间|状态|执行用时|内存消耗|语言|<br>|:——:|:——:|:——:|:——:|:——:|:——:|<br>|7 小时前|    通过    |56 ms    |13.2 MB|    python3|</p><blockquote><p>这道题我一开始想偏了，一直想着怎么遍历怎么怎么，半天解决不了。最后本菜只能参考官方题解Java版然后用Python写了出来</p></blockquote><p>下面是官方题解<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strs.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    String prefix = strs[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; strs.length; i++)</span><br><span class="line">        <span class="keyword">while</span> (strs[i].indexOf(prefix) != <span class="number">0</span>) &#123;</span><br><span class="line">            prefix = prefix.substring(<span class="number">0</span>, prefix.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (prefix.isEmpty()) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;        </span><br><span class="line">    <span class="keyword">return</span> prefix;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下面是我用Python改了一遍的。(哭~~） Python 没有<code>indexof</code>这里想到了用<code>find</code>替代，然后下面切割字符串刚刚好Python的切片。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs: List[str])</span> -&gt; str:</span></span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> len(strs) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> strs[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> len(strs) &gt; <span class="number">1</span>:</span><br><span class="line">            temp = strs[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">while</span> i &lt; len(strs):</span><br><span class="line">                <span class="keyword">while</span> strs[i].find(temp) != <span class="number">0</span>:</span><br><span class="line">                    temp = temp[<span class="number">0</span>:len(temp) - <span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">if</span> temp == <span class="string">''</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> temp</span><br></pre></td></tr></table></figure></p><p><del>慢慢来吧。菜鸡终有出头日</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;写在最先&quot;&gt;&lt;a href=&quot;#写在最先&quot; class=&quot;headerlink&quot; title=&quot;写在最先&quot;&gt;&lt;/a&gt;写在最先&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;之前博客用的个人域名然后放在vultr上，前阵子不知道怎么出问题了，访问特别困难，后来发现dnsp
      
    
    </summary>
    
    
      <category term="Leecode" scheme="https://ajycc20.github.io/tags/Leecode/"/>
    
      <category term="Python" scheme="https://ajycc20.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ajycc20.github.io/2019/02/24/hello-world/"/>
    <id>https://ajycc20.github.io/2019/02/24/hello-world/</id>
    <published>2019-02-24T07:51:21.977Z</published>
    <updated>2019-02-24T07:51:21.978Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
